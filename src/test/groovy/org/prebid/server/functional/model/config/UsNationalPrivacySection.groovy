package org.prebid.server.functional.model.config

import com.fasterxml.jackson.annotation.JsonValue
import com.iab.gpp.encoder.field.UsNatField

enum UsNationalPrivacySection {

    SHARING_NOTICE(UsNatField.SHARING_NOTICE),
    SALE_OPT_OUT_NOTICE(UsNatField.SALE_OPT_OUT_NOTICE),
    SHARING_OPT_OUT_NOTICE(UsNatField.SHARING_OPT_OUT_NOTICE),
    TARGETED_ADVERTISING_OPT_OUT_NOTICE(UsNatField.TARGETED_ADVERTISING_OPT_OUT_NOTICE),
    SENSITIVE_DATA_PROCESSING_OPT_OUT_NOTICE(UsNatField.SENSITIVE_DATA_PROCESSING_OPT_OUT_NOTICE),
    SENSITIVE_DATA_LIMIT_USE_NOTICE(UsNatField.SENSITIVE_DATA_LIMIT_USE_NOTICE),
    SALE_OPT_OUT(UsNatField.SALE_OPT_OUT),
    SHARING_OPT_OUT(UsNatField.SHARING_OPT_OUT),
    TARGETED_ADVERTISING_OPT_OUT(UsNatField.TARGETED_ADVERTISING_OPT_OUT),
    SENSITIVE_DATA_RACIAL_ETHNIC_ORIGIN(UsNatField.SENSITIVE_DATA_PROCESSING + 1),
    SENSITIVE_DATA_RELIGIOUS_BELIEFS(UsNatField.SENSITIVE_DATA_PROCESSING + 2),
    SENSITIVE_DATA_HEALTH_INFO(UsNatField.SENSITIVE_DATA_PROCESSING + 3),
    SENSITIVE_DATA_ORIENTATION(UsNatField.SENSITIVE_DATA_PROCESSING + 4),
    SENSITIVE_DATA_CITIZENSHIP_STATUS(UsNatField.SENSITIVE_DATA_PROCESSING + 5),
    SENSITIVE_DATA_GENETIC_ID(UsNatField.SENSITIVE_DATA_PROCESSING + 6),
    SENSITIVE_DATA_BIOMETRIC_ID(UsNatField.SENSITIVE_DATA_PROCESSING + 7),
    SENSITIVE_DATA_GEOLOCATION(UsNatField.SENSITIVE_DATA_PROCESSING + 8),
    SENSITIVE_DATA_ID_NUMBERS(UsNatField.SENSITIVE_DATA_PROCESSING + 9),
    SENSITIVE_DATA_ACCOUNT_INFO(UsNatField.SENSITIVE_DATA_PROCESSING + 10),
    SENSITIVE_DATA_UNION_MEMBERSHIP(UsNatField.SENSITIVE_DATA_PROCESSING + 11),
    SENSITIVE_DATA_COMMUNICATION_CONTENTS(UsNatField.SENSITIVE_DATA_PROCESSING + 12),
    SENSITIVE_DATA_PROCESSING_ALL(UsNatField.SENSITIVE_DATA_PROCESSING + "*"),
    CHILD_CONSENTS_FROM_13_TO_16(UsNatField.KNOWN_CHILD_SENSITIVE_DATA_CONSENTS + 1),
    CHILD_CONSENTS_BELOW_13(UsNatField.KNOWN_CHILD_SENSITIVE_DATA_CONSENTS + 2),
    PERSONAL_DATA_CONSENTS(UsNatField.PERSONAL_DATA_CONSENTS),
    MSPA_COVERED_TRANSACTION(UsNatField.MSPA_COVERED_TRANSACTION),
    MSPA_OPT_OUT_OPTION_MODE(UsNatField.MSPA_OPT_OUT_OPTION_MODE),
    MSPA_SERVICE_PROVIDER_MODE(UsNatField.MSPA_SERVICE_PROVIDER_MODE),
    GPC(UsNatField.GPC);

    @JsonValue
    final String value

    private UsNationalPrivacySection(String value) {
        this.value = value
    }

    static UsNationalPrivacySection valueFromText(String value) {
        values().find { section -> section.value.equalsIgnoreCase(value) }
                ?: { throw new IllegalArgumentException("Invalid UsNationalPrivacySection value: $value") }()
    }
}
