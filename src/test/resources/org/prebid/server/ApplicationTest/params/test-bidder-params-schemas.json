{
  "beachfront": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Beachfront Adapter Params",
    "description": "A schema which validates params accepted by the Beachfront adapter",
    "type": "object",
    "properties": {
      "appId": {
        "type": "string",
        "description": "The id of an inventory target"
      },
      "bidfloor": {
        "type": "number",
        "description": "The price floor for the bid"
      }
    },
    "required": [
      "appId",
      "bidfloor"
    ]
  },
  "adtelligent": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Adtelligent Adapter Params",
    "description": "A schema which validates params accepted by the Adtelligent adapter",
    "type": "object",
    "properties": {
      "placementId": {
        "type": "integer",
        "description": "An ID which identifies this placement of the impression"
      },
      "siteId": {
        "type": "integer",
        "description": "An ID which identifies the site selling the impression"
      },
      "aid": {
        "type": "integer",
        "description": "An ID which identifies the channel"
      },
      "bidFloor": {
        "type": "number",
        "description": "BidFloor, US Dollars"
      }
    },
    "required": [
      "aid"
    ]
  },
  "somoaudience": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "SomoAudience Adapter Params",
    "description": "A schema which validates params accepted by the SomoAudience adapter",
    "type": "object",
    "properties": {
      "placement_hash": {
        "type": "string",
        "description": "A hash defining the placement selling the impression"
      },
      "bid_floor": {
        "type": "number",
        "description": "Bid Floor for Impression",
        "minimum": 0
      }
    },
    "required": [
      "placement_hash"
    ]
  },
  "eplanning": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "EPlanning Adapter Params",
    "description": "A schema which validates params accepted by the EPlanning adapter",
    "type": "object",
    "properties": {
      "exchange_id": {
        "type": [
          "string"
        ],
        "description": "Exchange ID to use."
      }
    },
    "required": []
  },
  "adkernelAdn": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "AdkernelAdn Adapter Params",
    "description": "A schema which validates params accepted by the AdkernelAdn adapter",
    "type": "object",
    "properties": {
      "pubId": {
        "type": "integer",
        "minimum": 1,
        "description": "Publisher Id to use."
      },
      "host": {
        "type": "string",
        "description": "Network host to send request"
      }
    },
    "required": [
      "pubId"
    ]
  },
  "ix": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "ix Adapter Params",
    "description": "A schema which validates params accepted by the ix adapter",
    "type": "object",
    "properties": {
      "siteId": {
        "type": "string",
        "description": "An ID which identifies the site selling the impression"
      }
    },
    "required": [
      "siteId"
    ]
  },
  "lifestreet": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Lifestreet Adapter Params",
    "description": "A schema which validates params accepted by the Lifestreet adapter",
    "type": "object",
    "properties": {
      "slot_tag": {
        "type": "string",
        "description": "A tag which identifies the ad slot"
      }
    },
    "required": [
      "slot_tag"
    ]
  },
  "adform": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Adform Adapter Params",
    "description": "A schema which validates params accepted by the Adform adapter",
    "type": "object",
    "properties": {
      "mid": {
        "type": [
          "integer",
          "string"
        ],
        "description": "An ID which identifies the placement selling the impression"
      },
      "priceType": {
        "type": "string",
        "enum": [
          "gross",
          "net"
        ],
        "description": "An expected price type (net or gross) of bids."
      }
    },
    "required": [
      "mid"
    ]
  },
  "brightroll": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Brightroll Adapter Params",
    "description": "A schema which validates params accepted by the Brightroll adapter",
    "type": "object",
    "properties": {
      "publisher": {
        "type": "string",
        "description": "Publisher Name to use."
      }
    },
    "required": [
      "publisher"
    ]
  },
  "rhythmone": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Rhythmone Adapter Params",
    "description": "A schema which validates params accepted by the Rhythmone adapter",
    "type": "object",
    "properties": {
      "placementId": {
        "type": "string",
        "description": "An ID which is used to frame Rhythmone ad tag",
        "minLength": 1
      },
      "path": {
        "type": "string",
        "description": "An ID which is used to frame Rhythmone ad tag",
        "minLength": 1
      },
      "zone": {
        "type": "string",
        "description": "An ID which is used to frame Rhythmone ad tag",
        "minLength": 1
      }
    },
    "required": [
      "placementId",
      "path",
      "zone"
    ]
  },
  "audienceNetwork": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Facebook Audience Network Adapter Params",
    "description": "A schema which validates params accepted by the Facebook Audience Network adapter",
    "type": "object",
    "properties": {
      "placementId": {
        "type": "string",
        "description": "An ID which identifies the placement selling the impression"
      }
    },
    "required": [
      "placementId"
    ]
  },
  "appnexus": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Appnexus Adapter Params",
    "description": "A schema which validates params accepted by the AppNexus adapter",
    "type": "object",
    "properties": {
      "placement_id": {
        "type": "integer",
        "description": "An ID which identifies this placement of the impression"
      },
      "placementId": {
        "type": "integer",
        "description": "Deprecated, use placement_id instead."
      },
      "inv_code": {
        "type": "string",
        "description": "A code identifying the inventory of this placement."
      },
      "invCode": {
        "type": "string",
        "description": "Deprecated, use inv_code instead."
      },
      "member": {
        "type": "string",
        "description": "An ID which identifies the member selling the impression."
      },
      "keywords": {
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "object",
          "description": "A key with one or more values associated with it. These are used in buy-side segment targeting.",
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "key"
          ]
        }
      },
      "traffic_source_code": {
        "type": "string",
        "description": "Specifies the third-party source of this impression."
      },
      "trafficSourceCode": {
        "type": "string",
        "description": "Deprecated, use traffic_source_code instead."
      },
      "reserve": {
        "type": "number",
        "description": "The minimium acceptable bid, in CPM, using US Dollars"
      },
      "position": {
        "type": "string",
        "enum": [
          "above",
          "below"
        ],
        "description": "Specifies the ad unit as above or below the fold"
      },
      "use_pmt_rule": {
        "type": "boolean",
        "description": "Boolean to signal AppNexus to apply the relevant payment rule"
      },
      "private_sizes": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "w": {
              "type": "integer"
            },
            "h": {
              "type": "integer"
            }
          },
          "required": [
            "w",
            "h"
          ]
        },
        "description": "Private sizes (ex: [{\"w\": 300, \"h\": 250},{...}]), experimental, may not be supported."
      }
    },
    "oneOf": [
      {
        "oneOf": [
          {
            "required": [
              "placementId"
            ]
          },
          {
            "required": [
              "placement_id"
            ]
          }
        ]
      },
      {
        "oneOf": [
          {
            "required": [
              "invCode",
              "member"
            ]
          },
          {
            "required": [
              "inv_code",
              "member"
            ]
          }
        ]
      }
    ],
    "not": {
      "required": [
        "placementId",
        "invCode",
        "member"
      ]
    }
  },
  "pubmatic": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Pubmatic Adapter Params",
    "description": "A schema which validates params accepted by the Pubmatic adapter",
    "type": "object",
    "properties": {
      "publisherId": {
        "type": "string",
        "description": "An ID which identifies the publisher"
      },
      "adSlot": {
        "type": "string",
        "description": "An ID which identifies the ad slot"
      },
      "wrapper": {
        "type": "object",
        "description": "Specifies pubmatic openwrap configuration for a publisher",
        "properties": {
          "profile": {
            "type": "integer",
            "description": "An ID which identifies the openwrap profile of publisher"
          },
          "version": {
            "type": "integer",
            "description": "An ID which identifies version of the openwrap profile"
          }
        },
        "required": [
          "profile"
        ]
      },
      "keywords": {
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "object",
          "description": "A key with one or more values associated with it. These are used in buy-side segment targeting.",
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "key",
            "value"
          ]
        }
      }
    },
    "required": [
      "publisherId",
      "adSlot"
    ]
  },
  "ttx": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "33Across Adapter Params",
    "description": "A schema which validates params accepted by the 33Across adapter",
    "type": "object",
    "properties": {
      "productId": {
        "type": "string",
        "description": "Product type"
      },
      "siteId": {
        "type": "string",
        "description": "Site Id"
      },
      "zoneId": {
        "type": "string",
        "description": "Zone Id"
      }
    },
    "required": [
      "productId",
      "siteId"
    ]
  },
  "rubicon": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Rubicon Adapter Params",
    "description": "A schema which validates params accepted by the Rubicon adapter",
    "type": "object",
    "properties": {
      "accountId": {
        "type": "integer",
        "minimum": 1,
        "description": "An ID which identifies the publisher's account"
      },
      "siteId": {
        "type": "integer",
        "minimum": 1,
        "description": "An ID which identifies the site selling the impression"
      },
      "zoneId": {
        "type": "integer",
        "minimum": 1,
        "description": "An ID which identifies the sub-section of the site where the impression is located"
      },
      "inventory": {
        "type": "object",
        "description": "An object defining arbitrary targeting key/value pairs related to the page",
        "additionalProperties": {
          "type": "array"
        }
      },
      "visitor": {
        "type": "object",
        "description": "An object defining arbitrary targeting key/value pairs related to the visitor",
        "additionalProperties": {
          "type": "array"
        }
      },
      "video": {
        "type": "object",
        "description": "An object defining additional Rubicon video parameters",
        "properties": {
          "Language": {
            "type": "string",
            "description": "Language of the ad - should match content video"
          },
          "PlayerHeight": {
            "type": "integer",
            "description": "Height in pixels of the video player"
          },
          "PlayerWidth": {
            "type": "integer",
            "description": "Width in pixels of the video player"
          },
          "VideoSizeID": {
            "type": "integer",
            "description": "Rubicon size_id, used to describe type of video ad (preroll, postroll, etc)"
          },
          "Skip": {
            "type": "integer",
            "description": "Can this ad be skipped ( 0 = no, 1 = yes)"
          },
          "SkipDelay": {
            "type": "integer",
            "description": "number of seconds until the ad can be skipped"
          }
        }
      }
    },
    "required": [
      "accountId",
      "siteId",
      "zoneId"
    ]
  },
  "pulsepoint": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Pulsepoint Adapter Params",
    "description": "A schema which validates params accepted by the Pulsepoint adapter",
    "type": "object",
    "properties": {
      "cp": {
        "type": "integer",
        "description": "An ID which identifies the publisher selling the impression"
      },
      "ct": {
        "type": "integer",
        "description": "An ID which identifies the ad slot being sold"
      },
      "cf": {
        "type": "string",
        "pattern": "^[0-9]+[xX][0-9]+$",
        "description": "The size of the ad slot being sold. This should be a string like 300X250"
      }
    },
    "required": [
      "cp",
      "ct",
      "cf"
    ]
  },
  "conversant": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Conversant Adapter Params",
    "description": "A schema which validates params accepted by the Conversant adapter.",
    "type": "object",
    "properties": {
      "site_id": {
        "type": "string",
        "description": "A Conversant specific ID which identifies the site."
      },
      "secure": {
        "type": "integer",
        "description": "Override http/https context on ad markup."
      },
      "bidfloor": {
        "type": "number",
        "description": "Minimum bid price that will be considered."
      },
      "tag_id": {
        "type": "string",
        "description": "Identifies specific ad placement."
      },
      "position": {
        "type": "integer",
        "description": "Ad position on screen."
      },
      "mobile": {
        "type": "integer",
        "description": "Indicate if the site is mobile optimized."
      },
      "mimes": {
        "type": "array",
        "description": "Array of content MIME types.  For videos only.",
        "items": {
          "type": "string"
        }
      },
      "maxduration": {
        "type": "integer",
        "description": "Maximum duration in seconds.  For videos only."
      },
      "api": {
        "type": "array",
        "description": "Array of supported API frameworks.  For videos only.",
        "items": {
          "type": "integer"
        }
      },
      "protocols": {
        "type": "array",
        "description": "Array of supported video protocols.  For videos only.",
        "items": {
          "type": "integer"
        }
      }
    },
    "required": [
      "site_id"
    ]
  },
  "sovrn": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Sovrn Adapter Params",
    "description": "A schema which validates params accepted by the Sovrn adapter",
    "type": "object",
    "properties": {
      "tagid": {
        "type": "string",
        "description": "An ID which identifies the sovrn ad tag"
      },
      "tagId": {
        "type": "string",
        "description": "An ID which identifies the sovrn ad tag (DEPRECATED, use \"tagid\" instead)"
      },
      "bidfloor": {
        "type": "number",
        "description": "The minimum acceptable bid, in CPM, using US Dollars"
      }
    },
    "oneOf": [
      {
        "required": [
          "tagid"
        ]
      },
      {
        "required": [
          "tagId"
        ]
      }
    ]
  },
  "openx": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Openx Adapter Params",
    "description": "A schema which validates params accepted by the Openx adapter",
    "type": "object",
    "properties": {
      "unit": {
        "type": "string",
        "description": "The ad unit id.",
        "pattern": "^[0-9]+$"
      },
      "delDomain": {
        "type": "string",
        "description": "The delivery domain for the customer.",
        "pattern": "\\.[a-zA-Z]{2,3}$",
        "format": "hostname"
      },
      "customFloor": {
        "type": "number",
        "description": "The minimum CPM price in USD.",
        "minimum": 0
      },
      "customParams": {
        "type": "object",
        "description": "User-defined targeting key-value pairs."
      }
    },
    "required": [
      "unit",
      "delDomain"
    ]
  }
}
